CREATE DATABASE IF NOT EXISTS brizo;
USE brizo;

CREATE TABLE menu_items (
    id INT PRIMARY KEY AUTO_INCREMENT,
    item_name VARCHAR(100) NOT NULL,
    description TEXT,
    price DECIMAL(10,2) NOT NULL,
    is_available BOOLEAN DEFAULT TRUE,
    promotion VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    COLUMN photo VARCHAR(255) DEFAULT NULL;

);

ALTER TABLE menu_items ADD category ENUM('burger','chicken','drink','snacks','meal') NOT NULL AFTER id;
ADD FULLTEXT INDEX ft_search (item_name, description);

CREATE TABLE admin (
  id INT AUTO_INCREMENT PRIMARY KEY,
  photo VARCHAR(255) DEFAULT 'default.jpg',
  name VARCHAR(100) NOT NULL,
  gender ENUM('Male','Female') NOT NULL,
  age INT NOT NULL,
  position VARCHAR(100) NOT NULL,
  phone VARCHAR(20) NOT NULL,
  role ENUM('admin','superadmin') NOT NULL,
  email VARCHAR(100) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO admin (name, gender, age, position, phone, role, email, password, photo)
VALUES (
  'Ng Jin Yang',
  'Male',
  30,
  'Super Administrator',
  '0123456789',
  'superadmin',
  'jinyang@brizo.com',
  '$2b$12$F8q00EQR6Bjz6El9TFFlWuiw6wyjvQWLS1Di/SiPY.mD28hh0Kw8i',
  'default.jpg'
);

CREATE DATABASE brizo;
USE brizo;
CREATE TABLE customers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    fullname VARCHAR(100),
    email VARCHAR(100) UNIQUE,
    password VARCHAR(255),
    phone VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE customers
ADD COLUMN gender ENUM('male', 'female') DEFAULT NULL,
ADD COLUMN age INT,
ADD COLUMN address TEXT,
ADD COLUMN city VARCHAR(100),
ADD COLUMN postal_code VARCHAR(20);
ADD COLUMN photo VARCHAR(255) DEFAULT 'user.png';

INSERT INTO menu_items (
    category,
    item_name,
    description,
    price,
    is_available,
    created_at,
    photo
) VALUES
-- 汉堡类
('burger', 'Classic Onion Burger', 'Classic Onion Burger', 12.00, 1, '2025-03-27 12:39:55', 'uploads/67f53fc11969d.jpg'),
('burger', 'Crispy Chicken Burger', 'Crispy Chicken Burger', 14.00, 1, '2025-04-10 11:51:22', 'uploads/67f7403a6e20b.jpg'),
('burger', 'Charcoal-grilled burger', 'Charcoal-grilled burger', 15.00, 1, '2025-04-10 12:30:00', 'uploads/67f7498decaa2.jpg'),

-- 炸鸡类
('chicken', 'Korean Fried Chicken', 'Delicious grilled chicken with Korean chili pepper...', 7.50, 1, '2025-04-10 11:36:55', 'uploads/67f73cd7566e5.jpg'),
('chicken', 'Buttermilk Fried Chicken', 'Buttermilk Fried Chicken', 7.00, 1, '2025-04-11 11:18:21', 'uploads/67f889fd4887d.png'),

-- 饮料类
('drink', 'Coke (Soft Drink)', 'Coke (Soft Drink)', 2.50, 1, '2025-04-10 12:33:21', 'uploads/67f74af6740d1.png'),
('drink', 'Sprite (Soft Drink)', 'Sprite (Soft Drink)', 2.50, 1, '2025-04-10 12:36:18', 'uploads/67f74ac2d2f20.jpg'),
('drink', 'Iced Lemon Tea', 'Iced Lemon Tea', 3.00, 1, '2025-04-11 11:16:17', 'uploads/67f88981a15cb.png'),
('drink', 'Limited Golden Warm Water', 'Limited offer 50 percent for only 100 million', 99999999.99, 0, '2025-04-11 11:30:48', 'uploads/67f88ce84138a.png'),

-- 小食类
('snacks', 'Crispy French Fries', 'Crispy French Fries', 5.00, 1, '2025-04-11 10:21:14', 'uploads/67f87c9a83952.png'),
('snacks', 'Mac and Cheese Wedge Bites', 'Mac and Cheese Wedge Bites', 6.00, 1, '2025-04-11 10:25:19', 'uploads/67f87d8fa0f7d.png'),

-- 套餐类
('meal', 'Crispy Whole Chicken Set', 'Crispy Whole Chicken *1 / Drink (optional) *6 /...', 58.00, 1, '2025-04-11 11:24:52', 'uploads/67f88b846c275.png');

CREATE TABLE notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    message TEXT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    is_pinned BOOLEAN DEFAULT 0,
    created_by INT NOT NULL,
    FOREIGN KEY (created_by) REFERENCES admin(id)
);

ALTER TABLE notifications 
ADD COLUMN reposted_by INT NULL,
ADD COLUMN reposted_at DATETIME NULL,
ADD FOREIGN KEY (reposted_by) REFERENCES admin(id);

CREATE TABLE cart (
    id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT NOT NULL,
    item_id INT NOT NULL,
    quantity INT NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (customer_id) REFERENCES customers(id) ON DELETE CASCADE,
    FOREIGN KEY (item_id) REFERENCES menu_items(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_code VARCHAR(50) NOT NULL UNIQUE,
    customer_id INT NULL,
    items TEXT NOT NULL,
    total DECIMAL(10,2) NOT NULL,
    status ENUM('pending', 'completed', 'refunded') DEFAULT 'pending',
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT fk_orders_customer 
        FOREIGN KEY (customer_id) REFERENCES customers(id)
        ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

ALTER TABLE orders MODIFY items TEXT NOT NULL COMMENT 'JSON结构调整为：[{"item_id":1,"quantity":2,"price":10.00}]';